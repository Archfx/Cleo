#!/usr/bin/env python3

import sys
import csv
import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import entropy

def normalize_data(data):
    normalized_data = []
    for col in range(len(data[0])):
        values = [float(row[col]) for row in data[10:]]
        mean = np.mean(values)
        std_dev = np.std(values)
        normalized_values = [(value - mean) / std_dev for value in values]
        normalized_data.append(normalized_values)
    return normalized_data

def plot_line_chart(csv_file):
    try:
        with open(csv_file, 'r') as file:
            reader = csv.reader(file)
            data = list(reader)
    except FileNotFoundError:
        print(f"Error: File '{csv_file}' not found.")
        sys.exit(1)
    except csv.Error:
        print(f"Error: Unable to parse data from '{csv_file}'. Make sure it's a valid CSV file.")
        sys.exit(1)

    # Check if the CSV file contains at least two columns
    if len(data[0]) < 2:
        print("Error: The CSV file must have at least two columns.")
        sys.exit(1)

    # Use row numbers as x-values
    x = list(range(10, len(data)))  # Exclude the header

    # Normalize each column
    normalized_data = normalize_data(data)

    # # Plot each  column as a separate line
    # for i in range(0, len(data[0])):
    #     y = [float(row[i]) for row in data[1:]]  # Exclude the header
    #     plt.plot(x, y, label=data[0][i])

    # Plot each normalized column as a separate line
    for i in range(len(data[0])):
        y = normalized_data[i]
        plt.plot(x, y, label=data[0][i])

    # Use the title from the first column of the first row
    title = csv_file
    plt.title(title)
    title = data[0][0] if data[0][0] else 'Line Chart'
    plt.title(title)
    plt.xlabel('Cycles')
    plt.ylabel('Power')
    plt.legend()
    # plt.show()

    # Save the plot as an SVG file with the same name as the CSV file
    svg_filename = csv_file.replace('.csv', '.svg')
    plt.savefig(svg_filename, format='svg')

    print(f"Plot saved as {svg_filename}")

    # Compute and print the KL divergence matrix
    kl_divergence_matrix = np.zeros((len(data[0]), len(data[0])))
    for i in range(len(data[0])):
        for j in range(len(data[0])):
            if i != j:
                kl_divergence_matrix[i, j] = entropy(normalized_data[i], normalized_data[j])

    print("KL Divergence Matrix:")
    print(kl_divergence_matrix)

if __name__ == "__main__":
    # Check if a CSV file is provided as a command-line argument
    if len(sys.argv) != 2:
        print("Usage: python script.py <csv_file>")
        sys.exit(1)

    csv_file = sys.argv[1]
    plot_line_chart(csv_file)